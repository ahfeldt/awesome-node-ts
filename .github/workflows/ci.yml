name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Installera pnpm globalt (stabilt i GitHub runners)
      - name: Install pnpm
        run: |
          npm i -g pnpm@10
          pnpm -v

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create .env for CI
        run: |
          echo "PORT=3000" > .env
          echo "NODE_ENV=test" >> .env
          echo "DATABASE_URL=file:./dev.db" >> .env

      - name: Prisma generate
        run: npx prisma generate

      - name: Prisma migrate (deploy)
        run: npx prisma migrate deploy

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test

  docker-image:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # krävs för att pusha till GHCR
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Logga in mot GHCR med GITHUB_TOKEN
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Skapa taggar: ghcr.io/<owner>/<repo>:<sha> och :latest på main
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=sha-${{ github.sha }}
            type=raw,enable=${{ github.ref == 'refs/heads/main' }},value=latest

      # Bygg & pusha
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
